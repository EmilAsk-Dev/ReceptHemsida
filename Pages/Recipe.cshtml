@page "recipe/{id?}"
@model ReceptHemsida.Pages.RecipeModel
@{
    ViewData["Title"] = "All Recipes";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<!-- Hero Section with Background Image -->
<div class="hero-section text-center position-relative">
    <div class="overlay"></div>
    <div class="container-fluid position-relative text-white py-5">

        <!-- Title Above Search -->
        <h1 class="fw-bold search-title">All recipes</h1>

       @*  <!-- Search Input Centered -->
        <form method="get">
            <div class="search-container">
                <input type="text" name="Search" value="@Model.Search" class="form-control search-input" placeholder="Search recipe of your choice...">
                <button type="submit" class="btn search-btn"><i class="fas fa-search"></i></button>
            </div>
        </form> *@
    </div>

    <!-- Filter Section Below Search -->
    <div class="container filter-container">
        <div class="filter-card p-3">
            <h4 class="mb-3 text-center fw-bold filter-title">Filter Your Recipes</h4>
            <div class="row text-center">
                <div class="col-md-4">
                    <label for="categoryFilter" class="form-label filter-label">Category:</label>
                    <select id="categoryFilter" class="form-select">
                        <option value="all">All Categories</option>
                        @foreach (var category in Enum.GetValues(typeof(ReceptHemsida.Models.RecipeCategory)))
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>

                <div class="col-md-4">
                    <label for="timeFilter" class="form-label filter-label">Cooking Time:</label>
                    <select id="timeFilter" class="form-select">
                        <option value="all">Select Time</option>
                        <option value="15">Under 15 min</option>
                        <option value="30">Under 30 min</option>
                        <option value="60">Under 60 min</option>
                        <option value="120">Under 2 hours</option>
                    </select>
                </div>

                <div class="col-md-4">
                    <label for="difficultyFilter" class="form-label filter-label">Difficulty:</label>
                    <select id="difficultyFilter" class="form-select">
                        <option value="all">All Levels</option>
                        <option value="easy">Easy</option>
                        <option value="medium">Medium</option>
                        <option value="hard">Hard</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Recipes Display Section -->
<div class="container">
    <div class="row">
        @if (Model.Recipes.Any())
        {
            @foreach (var recipe in Model.Recipes)
            {
                <div class="recipe-card" data-category="@recipe.Category" data-cooktime="@recipe.CookTime">
                    <img src="@(string.IsNullOrEmpty(recipe.ImageUrl) ? "/images/default-recipe.jpg" : recipe.ImageUrl)" alt="@recipe.Title" class="recipe-img">
                    <div class="recipe-content">
                        <h3 class="recipe-title">@recipe.Title</h3>
                        <div class="recipe-meta">
                            <span>@recipe.CookTime min</span>
                            <span>@recipe.Difficulty</span>
                        </div>
                        <p class="recipe-desc">@recipe.Description</p>
                        <div class="recipe-footer">
                            <div class="recipe-tags">
                                @foreach (var tag in recipe.Tags)
                                {
                                    <span class="recipe-tag">@tag</span>
                                }
                            </div>
                            <a asp-page="/RecipeDetails" asp-route-id="@recipe.Id" class="btn">View Recipe</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
    
    @if (!Model.Recipes.Any())
    {
        <div id="noRecipesMessage" class="no-recipes">
            <p>No recipes were found with the current filters.</p>
        </div>
    }
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const categoryFilter = document.getElementById("categoryFilter");
            categoryFilter.addEventListener("change", function() {
                const category = this.value;
                if (category === "all") {
                    window.location.href = "/recipe";
                } else {
                    window.location.href = "/recipe/category/" + category;
                }
            });

            const timeFilter = document.getElementById("timeFilter");
            timeFilter.addEventListener("change", function() {
                const cookTime = this.value;
                const recipeCards = document.querySelectorAll(".recipe-card");
                let visibleCount = 0;
                
                recipeCards.forEach(card => {
                    const cardCookTime = parseInt(card.getAttribute("data-cooktime"));
                    
                    if (cookTime === "all" || cardCookTime <= parseInt(cookTime)) {
                        card.style.display = "block";
                        visibleCount++;
                    } else {
                        card.style.display = "none";
                    }
                });
                
                document.getElementById("noRecipesMessage").style.display = 
                    visibleCount === 0 ? "block" : "none";
            });
        });
    </script>
}
