@page
@inject SignInManager<ReceptHemsida.Data.ApplicationUser> SignInManager
@inject UserManager<ReceptHemsida.Data.ApplicationUser> UserManager

@model ReceptHemsida.Pages.UserSettingsModel
@{
}
<div class="password-form-container">
    <div class="form-wrapper">
        <div class="password-form">
            <h2>User Information</h2>
            @if (SignInManager.IsSignedIn(User))
            {
                var currentUser = await UserManager.GetUserAsync(User);
                <p><strong>Username:</strong> @currentUser.UserName</p>
                <p><strong>Email:</strong> @currentUser.Email</p>
            }
        </div>

        <div class="password-form">
            <h3>Change Password</h3>
            <form method="post" asp-page="/ChangePassword">
                <input type="password" id="currentPassword" name="CurrentPassword" placeholder="Current password" required />
                <input type="password" id="newPassword" name="NewPassword" placeholder="New password" required />
                <input type="password" id="confirmPassword" name="ConfirmPassword" placeholder="Confirm password" required />
                <button type="submit">Save Changes</button>
            </form>

            @if (Model.CurrentPasswordWrong)
            {
                <p class="error-message">Current password isn't correct.</p>
            }

            @if (Model.PasswordUnmatched)
            {
                <p class="error-message">Passwords are not matching.</p>
            }

            @if (Model.PasswordChanged)
            {
                <p class="success-message">Password successfully changed!</p>
            }
        </div>
    </div>
</div>
